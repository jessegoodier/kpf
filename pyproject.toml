[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kpf"
dynamic = ["version"]
description = "A Python utility to run kubectl port-forward and automatically restart it when endpoint changes are detected"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Jesse Goodier"},
]
keywords = ["kubernetes", "kubectl", "port-forward", "k8s", "devops"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "rich>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "isort>=5.12.0",
    "bump-my-version>=0.15.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/jessegoodier/kpf"
Repository = "https://github.com/jessegoodier/kpf"
Issues = "https://github.com/jessegoodier/kpf/issues"

[project.scripts]
kpf = "kpf.cli:main"

[tool.hatch.version]
path = "src/kpf/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/kpf"]

[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kpf"]

[tool.bump-my-version]
current_version = "0.1.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[[tool.bump-my-version.files]]
filename = "src/kpf/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=kpf --cov-report=term-missing --cov-report=html"